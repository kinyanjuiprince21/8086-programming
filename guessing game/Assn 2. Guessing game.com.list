EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Assn 2. Guessing game.com -- emu8086 assembler version: 4.08  
 
[ 09/08/2023  --  14:41:05 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       org 100h
[   2]        :                                       
[   3]    0100: E9 8E 01                              .data
[   4]    0103: 61 70 70 6C 65 00 61 70 70 00 62 69   pool db 'apple', 0, 'app',0,'bicycle', 0 , 'town',0, 'red',0,'blue',0,'mouse',0,
                63 79 63 6C 65 00 74 6F 77 6E 00 72 
                65 64 00 62 6C 75 65 00 6D 6F 75 73 
                65 00                               
[   5]    0129: 73 74 61 63 6B 00 6D 65 6D 6F 72 79   db 'stack', 0, 'memory', 0, 'juja', 0, 'game', 0,
                00 6A 75 6A 61 00 67 61 6D 65 00    
[   6]        :                                       
[   7]    0140: 0A 0D 43 6F 6E 67 72 61 74 75 6C 61   win    db 10,13,"Congratulations!$"
                74 69 6F 6E 73 21 24                
[   8]        :                                       
[   9]    0153: 0A 0D 54 6F 74 61 6C 20 63 6F 72 72   result db 10,13,"Total correct guesses: $"
                65 63 74 20 67 75 65 73 73 65 73 3A 
                20 24                               
[  10]    016D: 0A 0D 45 6E 74 65 72 20 6E 65 77 20   entry  db 10,13,"Enter new word: $"
                77 6F 72 64 3A 20 24                
[  11]    0180: 3A 20 24                              space  db ": $"
[  12]    0183: 0A 0D 54 72 69 61 6C 20 4E 6F 2E 24   trial  db 10,13,"Trial No.$"
                                                    
[  13]    018F: 00                                    tries  db ?
[  14]    0190:                                       P1 LABEL BYTE
[  15]    0190: FF                                    M1  DB 0FFH
[  16]    0191: 00                                    L1  Db ?
[  17]    0192: 24 24 24 24 24 24 24 24 24 24 24 24   P11 DB 0FFH DUP ('$')
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24                            
[  18]        :                                       
[  19]        :                                       
[  20]    0291:                                       .code
[  21]    0291:                                       begin:
[  22]    0291: 8C C8                                 mov ax, @data
[  23]    0293: 8E D8                                 mov ds, ax
[  24]        :                                       
[  25]    0295: B9 FF 00                              mov cx, 255
[  26]    0298: BA 83 01                              mov dx, offset trial
[  27]    029B: B4 09                                 mov ah, 09
[  28]    029D: CD 21                                 int 21h
[  29]        :                                       
[  30]    029F: 80 06 8F 01 30                        add tries, 30h
[  31]    02A4: 80 06 8F 01 01                        add tries, 1h
[  32]        :                                       
[  33]    02A9: 8A 16 8F 01                           mov dl,  tries
[  34]    02AD: B4 02                                 mov ah, 02
[  35]    02AF: CD 21                                 int 21h
[  36]        :                                       
[  37]    02B1: 80 2E 8F 01 01                        sub tries, 1h
[  38]    02B6: 80 2E 8F 01 30                        sub tries, 30h
[  39]        :                                       
[  40]    02BB: BA 6D 01                              mov dx, offset entry
[  41]    02BE: B4 09                                 mov ah, 09
[  42]    02C0: CD 21                                 int 21h
[  43]        :                                       
[  44]    02C2: BA 90 01                              LEA DX,P1
[  45]    02C5: B4 0A                                 MOV AH,0AH
[  46]    02C7: CD 21                                 INT 21H
[  47]        :                                       
[  48]    02C9:                                       comp:
[  49]    02C9: 8A 16 91 01                           mov dl, l1
[  50]    02CD: B6 00                                 mov dh, 0
[  51]        :                                       
[  52]    02CF: 3B FA                                 cmp di, dx
[  53]    02D1: 74 28                                 je wordeol
[  54]        :                                       
[  55]    02D3: 8A 84 03 01                           mov al, pool[si]
[  56]        :                                       
[  57]    02D7: 50                                    push ax
[  58]        :                                       
[  59]    02D8: B4 0E                                 mov ah, 0eh
[  60]    02DA: CD 10                                 int 10h
[  61]        :                                       
[  62]    02DC: A0 80 01                              mov al, space
[  63]    02DF: B4 0E                                 mov ah, 0eh
[  64]    02E1: CD 10                                 int 10h
[  65]        :                                       
[  66]    02E3: 8A 85 92 01                           mov al, p11[di]
[  67]    02E7: B4 0E                                 mov ah, 0eh
[  68]    02E9: CD 10                                 int 10h
[  69]        :                                       
[  70]    02EB: 58                                    pop ax
[  71]        :                                       
[  72]    02EC: 83 FD 0B                              cmp bp, 0bh
[  73]    02EF: 74 35                                 je POOLEND
[  74]        :                                       
[  75]    02F1: 3A 85 92 01                           cmp al, p11[di]
[  76]    02F5: 75 1E                                 jne NOTEQUAL
[  77]        :                                       
[  78]    02F7: 46                                    inc si
[  79]    02F8: 47                                    inc di
[  80]        :                                       
[  81]    02F9: E2 CE                                 loop comp
[  82]        :                                       
[  83]    02FB:                                       WORDEOL:
[  84]    02FB: 4F                                    dec di
[  85]        :                                       
[  86]    02FC: 3A 85 92 01                           cmp al, p11[di]
[  87]    0300: 75 13                                 jne notequal
[  88]        :                                       
[  89]    0302: 8A 84 03 01                           mov al, pool[si]
[  90]    0306: 3C 00                                 cmp al, 0
[  91]    0308: 75 0B                                 jne notequal
[  92]        :                                       
[  93]    030A: FE C3                                 inc bl  ;stores wins
[  94]        :                                       
[  95]    030C: BA 40 01                              mov dx, offset win
[  96]    030F: B4 09                                 mov ah, 09
[  97]    0311: CD 21                                 int 21h
[  98]        :                                       
[  99]    0313: EB 11                                 jmp poolend
[ 100]        :                                       
[ 101]    0315:                                       NOTEQUAL:
[ 102]    0315: 8A 84 03 01                           mov al, pool[si]
[ 103]        :                                       
[ 104]    0319: 3C 00                                 cmp al, 0
[ 105]    031B: 74 03                                 je reset
[ 106]        :                                       
[ 107]    031D: 46                                    inc si
[ 108]        :                                       
[ 109]    031E: E2 F5                                 loop NOTEQUAL
[ 110]        :                                       
[ 111]    0320:                                       reset:
[ 112]    0320: 46                                    inc si
[ 113]    0321: 33 FF                                 xor di, di
[ 114]    0323: 45                                    inc bp
[ 115]        :                                       
[ 116]    0324: EB A3                                 jmp COMP
[ 117]        :                                       
[ 118]    0326:                                       POOLEND:            ;word found reset pool too
[ 119]    0326: 33 F6                                 xor si, si
[ 120]    0328: 33 FF                                 xor di, di
[ 121]    032A: 33 ED                                 xor bp, bp
[ 122]        :                                       
[ 123]    032C: 8A 16 8F 01                           mov dl, tries
[ 124]    0330: FE C2                                 inc dl
[ 125]        :                                       
[ 126]    0332: 88 16 8F 01                           mov tries, dl
[ 127]    0336: 80 3E 8F 01 05                        cmp tries, 5h
[ 128]    033B: 74 34                                 je results
[ 129]        :                                       
[ 130]    033D: BA 83 01                              mov dx, offset trial
[ 131]    0340: B4 09                                 mov ah, 09
[ 132]    0342: CD 21                                 int 21h
[ 133]        :                                       
[ 134]    0344: 80 06 8F 01 30                        add tries, 30h
[ 135]    0349: 80 06 8F 01 01                        add tries, 1h
[ 136]        :                                       
[ 137]    034E: 8A 16 8F 01                           mov dl,  tries
[ 138]    0352: B4 02                                 mov ah, 02
[ 139]    0354: CD 21                                 int 21h
[ 140]        :                                       
[ 141]    0356: 80 2E 8F 01 01                        sub tries, 1h
[ 142]    035B: 80 2E 8F 01 30                        sub tries, 30h
[ 143]        :                                       
[ 144]    0360:                                       input:
[ 145]    0360: BA 6D 01                              mov dx, offset entry
[ 146]    0363: B4 09                                 mov ah, 09
[ 147]    0365: CD 21                                 int 21h
[ 148]        :                                       
[ 149]    0367: BA 90 01                              LEA DX,P1
[ 150]    036A: B4 0A                                 MOV AH,0AH
[ 151]    036C: CD 21                                 INT 21H
[ 152]    036E: E9 58 FF                              jmp comp
[ 153]        :                                       
[ 154]    0371:                                       results:
[ 155]    0371: BA 53 01                              mov dx, offset result
[ 156]    0374: B4 09                                 mov ah, 09
[ 157]    0376: CD 21                                 int 21h
[ 158]        :                                       
[ 159]    0378: 8A D3                                 mov dl, bl
[ 160]    037A: 80 C2 30                              add dl, 30h
[ 161]    037D: B4 02                                 mov ah, 02
[ 162]    037F: CD 21                                 int 21h
[ 163]        :                                       
[ 164]    0381:                                       exit:
[ 165]    0381: B4 4C                                 mov ah, 4ch
[ 166]    0383: CD 21                                 int 21h
[ 167]        :                                       
[ 168]        :                                       
 
===================================================================================================
 




===================================================================================================
